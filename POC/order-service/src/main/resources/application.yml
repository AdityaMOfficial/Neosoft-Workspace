management:
    tracing:
        sampling:
            probability: 1.0
    endpoint:
        health:
            show-details: always
    endpoints:
        web:
            exposure:
                include:
                    - prometheus
                    - '*'
    health:
        circuit-breakers:
            enabled: true
resilience4j:
    circuitbreaker:
        instances:
            inventory:
                automaticTransitionFromOpenToHalfOpenEnabled: true
                event-consumer-buffer-size: 10
                failureRateThreshold: 50
                permittedNumberOfCallsInHalfOpenState: 3
                registerHealthIndicator: true
                slidingWindowSize: 5
                slidingWindowType: COUNT_BASED
                waitDurationInOpenState: 5s
server:
    port: 8081
spring:
    application:
        name: ORDER-SERVICE
    cloud:
        consul:
            config:
                enabled: true
            discovery:
                instance-id: ${spring.application.name}:${random.value}
                prefer-ip-address: true
            host: localhost
            port: 7200
    config:
        import: optional:consul:${spring.cloud.consul.host}:${spring.cloud.consul.port}/dev-config
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        password: test@1234
        url: jdbc:mysql://${MYSQL_HOST:localhost}:3306/order_service
        username: root
    jpa:
        hibernate:
            ddl-auto: update
        show-sql: true
    kafka:
        bootstrap-servers: localhost:9094
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
#            properties:
#                spring.json.type.mapping: event:com.programmingmicroservice.orderservice.events.OrderPlacedEvent
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#        template:
#            default-topic: notificationTopic
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:7800/realms/poc-realm
                    jwk-set-uri: http://localhost:7800/realms/poc-realm/protocol/openid-connect/certs
                opaquetoken:
                    client-id: my-client
                    client-secret: TGyd7N71m6iDpkeh78rQ178pqZE8bm6U
                    introspection-uri: http://localhost:7800/realms/poc-realm/protocol/openid-connect/token/introspect


tracing:
    url: http://10.0.61.255:4318/v1/traces


logging:
    pattern:
        level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'